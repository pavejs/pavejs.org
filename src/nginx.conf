<%
const websiteUrl = process.env.WEBSITE_URL;
const maxAge = process.env.CACHE_CONTROL_MAX_AGE;
const testIndex = process.env.TEST_INDEX;
const version = process.env.VERSION;
%>
daemon off;

events {}

http {
  include mime.types;

  brotli_static on;
  gzip_static on;
  gzip_proxied any;
  gzip_vary on;

  sendfile on;
  more_clear_headers Server;

  server_tokens off;

  map $http_upgrade $connection_upgrade {
    '' close;
    default upgrade;
  }

  proxy_http_version 1.1;
  proxy_set_header Connection $connection_upgrade;
  proxy_set_header Host $host;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Real-IP $remote_addr;

  ssl_certificate /etc/ssl/private/fullchain.pem;
  ssl_certificate_key /etc/ssl/private/privkey.pem;

  proxy_read_timeout 24h;

  # proxy_pass directives are passed hosts via a $proxy_pass_host variable to
  # allow nginx to start up before the hosts are actually available. Putting the
  # hosts directly in the proxy_pass directive will fail start up unless all
  # hosts are available. A resolver is required to use variables in proxy_pass
  # directives, so use the docker internal DNS IP here.
  resolver 127.0.0.11;

  map $http_x_forwarded_proto $bad_protocol {
    '' 0;
    https 0;
    default 1;
  }

  map $request_method $bad_method {
    GET 0;
    HEAD 0;
    default 1;
  }

  server {
    return 302 <%= websiteUrl %>$request_uri;
  }

  server {
    listen 80;
    server_name <%= websiteUrl.split('://')[1] %>;

    <% if (websiteUrl.startsWith('https')) { %>
      if ($bad_protocol) {
        return 302 <%= websiteUrl %>$request_uri;
      }
    <% } %>

    location @not_allowed {
      add_header Allow 'GET, HEAD' always;
      return 405 'Method not allowed';
    }

    error_page 405 @not_allowed;

    if ($bad_method) {
      return 405;
    }

    location = /status {
      add_header Content-Type 'application/json';
      return 200 '{"version":"<%= version %>"}';
    }

    root /code/dist;
    index <%= testIndex ? 'index.test.html' : '' %> index.html;

    error_page 404 =200 /;

    location /immutable/ {
      add_header Cache-Control 'public, max-age=31536000';
      try_files $uri /;
    }

    location /livereload {
      set $proxy_pass_host livereload:35729;
      proxy_pass http://$proxy_pass_host;
    }

    location / {
      add_header Cache-Control 'public, max-age=<%= maxAge %>';
    }
  }
}