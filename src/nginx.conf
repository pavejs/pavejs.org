<%
const websiteUrl = process.env.WEBSITE_URL;
const maxAge = process.env.CACHE_CONTROL_MAX_AGE;
const version = process.env.VERSION;
%>
events {}

http {
  server_tokens off;

  map $http_upgrade $connection_upgrade {
    '' close;
    default upgrade;
  }

  proxy_http_version 1.1;
  proxy_set_header Connection $connection_upgrade;
  proxy_set_header Host $host;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Real-IP $remote_addr;

  <% if (version !== 'development') { %>
    ssl_certificate /etc/ssl/private/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;
  <% } %>

  proxy_read_timeout 24h;
  resolver 127.0.0.11;

  include mime.types;

  brotli_static on;
  gzip_static on;
  gzip_proxied any;
  gzip_vary on;

  sendfile on;
  more_clear_headers Server;

  map $http_x_forwarded_proto $bad_protocol {
    '' 0;
    https 0;
    default 1;
  }

  map $request_method $bad_method {
    GET 0;
    HEAD 0;
    default 1;
  }

  server {
    set $sts_value 'max-age=31536000; includeSubDomains; preload';

    if ($bad_protocol) {
      set $sts_value '';
      return 302 https://$host$request_uri;
    }

    add_header Strict-Transport-Security $sts_value;

    return 302 <%= websiteUrl %>$request_uri;
  }

  server {
    listen 80;

    <% if (websiteUrl.startsWith('https')) { %>
      if ($bad_protocol) {
        return 302 <%= websiteUrl %>$request_uri;
      }
    <% } %>

    location @not_allowed {
      add_header Allow 'GET, HEAD' always;
      return 405 'Method not allowed';
    }

    error_page 405 @not_allowed;

    if ($bad_method) {
      return 405;
    }

    root /code/dist;

    location /livereload {
      set $proxy_pass_host livereload:35729;
      proxy_pass http://$proxy_pass_host;
    }

    error_page 404 /404.html;

    add_header Cache-Control 'public, max-age=<%= maxAge %>';

    try_files $uri $uri/index.html $uri.html =404;
  }
}