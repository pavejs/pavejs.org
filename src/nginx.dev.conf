<%
const websiteUrl = process.env.WEBSITE_URL;
const maxAge = process.env.CACHE_CONTROL_MAX_AGE;
const version = process.env.VERSION;
%>
daemon off;

events {}

http {
  include mime.types;

  brotli_static on;
  gzip_static on;
  gzip_proxied any;
  gzip_vary on;

  sendfile on;
  more_clear_headers Server;

  map $http_x_forwarded_proto $bad_protocol {
    '' 0;
    https 0;
    default 1;
  }

  map $request_method $bad_method {
    GET 0;
    HEAD 0;
    default 1;
  }

  server {
    set $sts_value 'max-age=31536000; includeSubDomains; preload';

    if ($bad_protocol) {
      set $sts_value '';
      return 302 https://$host$request_uri;
    }

    add_header Strict-Transport-Security $sts_value;

    return 302 <%= websiteUrl %>$request_uri;
  }

  server {
    server_name <%= websiteUrl.split('://')[1] %>;

    <% if (websiteUrl.startsWith('https')) { %>
      if ($bad_protocol) {
        return 302 <%= websiteUrl %>$request_uri;
      }
    <% } %>

    location @not_allowed {
      add_header Allow 'GET, HEAD' always;
      return 405 'Method not allowed';
    }

    error_page 405 @not_allowed;

    if ($bad_method) {
      return 405;
    }

    root /code/dist;

    error_page 404 /404.html;

    add_header Cache-Control 'public, max-age=<%= maxAge %>';

    try_files $uri $uri/index.html $uri.html =404;
  }
}